f = open("resource/grammar", "a")
f.write("// ====================================================================================\n")
f.write("// define the Arabic digit(ad)\n")
f.write("// ====================================================================================\n")
f.write("ad::[-+]?(\d+(\.\d*)?)([eE][-+]?\d+)?([\/:](\d+(\.\d*)?)([eE][-+]?\d+)?)?%?‰?|\d+(,\d{3})+")
f.write("\n")
f.write("\n")
f.write("// ====================================================================================\n")
f.write("// define the Chinese digit(cd)\n")
f.write("// ====================================================================================\n")
instances = "一 二 三 四 五 六 七 八 九 壹 贰 叁 肆 伍 陆 柒 捌 玖 两"
for i in instances.split(" "):
    f.write("cd::" + i + "\n")
f.write("\n")
f.write("// ====================================================================================\n")
f.write("// define the Chinese Magnitude(mag)\n")
f.write("// ====================================================================================\n")
instances = "十 百 千 拾 佰 仟 万 亿"
for i in instances.split(" "):
    f.write("mag::" + i + "\n")
f.write("\n")
f.write("// ====================================================================================\n")
f.write("// define the Chinese Fraction Connective(cfc)\n")
f.write("// ====================================================================================\n")
instances = "分之 比"
for i in instances.split(" "):
    f.write("cfc::" + i + "\n")
f.write("\n")
f.write("// ====================================================================================\n")
f.write("// define the Chinese Radix Point(crp)\n")
f.write("// ====================================================================================\n")
f.write("crp::点" + "\n")
f.write("\n")
f.write("// ====================================================================================\n")
f.write("// define the Skip Magnitude Connective(smc)\n")
f.write("// ====================================================================================\n")
f.write("smc::零" + "\n")
f.write("\n")
f.write("// ====================================================================================\n")
f.write("// define the adv(adv)\n")
f.write("// ====================================================================================\n")
instances = "大 小"
for i in instances.split(" "):
    f.write("adv::" + i + "\n")
f.write("\n")
f.write("// ====================================================================================\n")
f.write("// define the  Ordinal Number Prefix(nop)\n")
f.write("// ====================================================================================\n")
f.write("nop::第" + "\n")
f.write("\n")
f.write("// ====================================================================================\n")
f.write("// define the idiom(idiom)\n")
f.write("// ====================================================================================\n")
instances = "进一步 一模一样 一样 一本正经 十分 一方面 七七八八 七上八下 三七二十一 一定 一直 一切"
for i in instances.split(" "):
    f.write("idiom::" + i + "\n")
f.write("\n")
f.write("// ====================================================================================\n")
f.write("// define the comparision prefix(cp)\n")
f.write("// ====================================================================================\n")
instances = "多于 大于 超过 低于 不低于 不超过"
for i in instances.split(" "):
    f.write("cp::" + i + "\n")
f.write("\n")
f.write("// ====================================================================================\n")
f.write("// define the estimation prefix(ep)\n")
f.write("// ====================================================================================\n")
instances = "大约 大概 约 近 可能 约莫 达到"
for i in instances.split(" "):
    f.write("ep::" + i + "\n")
f.write("\n")
f.write("// ====================================================================================\n")
f.write("// define the quantity computational connective(qc)\n")
f.write("// ====================================================================================\n")
instances = "/ * 每"
for i in instances.split(" "):
    f.write("qc::" + i + "\n")
f.write("\n")
f.write("// ====================================================================================\n")
f.write("// define the number span connective(nc)\n")
f.write("// ====================================================================================\n")
instances = "~ 到"
for i in instances.split(" "):
    f.write("nc::" + i + "\n")
f.write("\n")
f.write("// ====================================================================================\n")
f.write("// define the quantity(q)\n")
f.write("// ====================================================================================\n")
instances = "串 事 册 丘 乘 下 丈 丝 两 举 具 美 包 厘 刀 分 列 则 剂 副 些 匝 队 陌 陔 部 出 个 介 令 份 伙 件 任 倍 儋 卖 亩 记 双 发 叠 节 茎 莛 荮 落 蓬 蔸 巡 过 进 通 造 遍 道 遭 对 尊 头 套 弓 引 张 弯 开 庄 床 座 庹 帖 帧 席 常 幅 幢 口 句 号 台 只 吊 合 名 吨 和 个 匹 些 味 响 骑 门 间 阕 宗 客 家 彪 层 尾 届 声 扎 打 扣 把 抛 批 种 抔 抱 拨 担 拉 抬 拃 挂 挑 挺 捆 掬 排 捧 掐 搭 提 握 摊 摞 撇 撮 汪 泓 泡 注 浔 派 湾 溜 滩 滴 级 纸 线 组 绞 统 绺 综 缕 缗 场 块 坛 垛 堵 堆 堂 塔 墩 回 团 围 圈 孔 贴 点 煎 熟 车 轮 转 载 辆 料 卷 截 户 房 所 扇 炉 炷 觉 斤 笔 本 朵 杆 束 条 杯 枚 枝 柄 栋 架 根 桄 梃 样 株 桩 梭 桶 棵 榀 槽 犋 爿 片 版 歇 手 拳 段 沓 班 文 曲 替 股 肩 脬 腔 支 步 武 瓣 秒 秩 钟 钱 铢 锊 铺 锤 锭 锱 章 盆 盏 盘 眉 眼 石 码 砣 碗 磴 票 罗 畈 番 窝 联 缶 耦 粒 索 累 緉 般 艘 竿 筥 筒 筹 管 篇 箱 簇 角 重 身 躯 酲 起 趟 面 首 项 领 顶 颗 顷 袭 群 袋 Km m Kg kg g h min 千米 公里 公斤 斤 光年 年 月 日 位 升 毫升 公顷 米 毫米 厘米 度"
for i in instances.split(" "):
    f.write("q::" + i + "\n")
f.write("\n")
f.write("// ====================================================================================\n")
f.write("// define the number comparision suffix(cs)\n")
f.write("// ====================================================================================\n")
f.write("cs::多" + "\n")
f.write("\n")
f.write("// ====================================================================================\n")
f.write("// define the number estimation suffix(es)\n")
f.write("// ====================================================================================\n")
instances = "上下 左右"
for i in instances.split(" "):
    f.write("es::" + i + "\n")
f.write("\n")
f.write("// ====================================================================================\n")
f.write("// define the number Ordinal Number(ON)\n")
f.write("// ====================================================================================\n")
f.write("ON::$nop$ $NUM$\n")
f.write("\n")
f.write("// ====================================================================================\n")
f.write("// define the number(NUM)\n")
f.write("// ====================================================================================\n")
instances = "$ad$ $mag$ | $ad$ | $CFN$ | $CN$"
for i in instances.split("|"):
    f.write("NUM::" + i + "\n")
f.write("\n")
f.write("// ====================================================================================\n")
f.write("// define the Chinese Fraction number(CFN)\n")
f.write("// ====================================================================================\n")
f.write("CFN::$CN$ $CRP$ $CN$" + "\n")
f.write("\n")
f.write("// ====================================================================================\n")
f.write("// define the Chinese number(CN)\n")
f.write("// ====================================================================================\n")
f.write("CN::(($cd$ $mag$+ $smc$?)+ $cd$ | $cd$ ) ($crp$ $cd$+)?" + "\n")
f.write("\n")
f.write("// ====================================================================================\n")
f.write("// define the number Quantity Phrase(QP)\n")
f.write("// ====================================================================================\n")
instances = "$ON$ | $CN$ $adv$ $q$ | $cp$? $NUM$ $q$? $cs$?"
for i in instances.split("|"):
    f.write("QP::" + i + "\n")
f.close()
